

import java.awt.Graphics;
import java.util.ArrayList;
import java.util.ConcurrentModificationException;
import java.util.List;

public class Aliens {

	private List<Alien> aliensList;
	
	public Aliens(int size){
		aliensList = new ArrayList<Alien>();
		int xPos = 100;
		int yPos = -100;
		int counter = 0;
		for(int i = 0; i < size; i++){
			aliensList.add(new Alien(xPos,yPos,1));
			xPos = xPos + 100;
			counter++;
			if(counter == 4){
				xPos = 100;
				yPos = yPos + 100;
				counter = 0;
			}
		}
		
	}
	
	public void add(Alien x){
		aliensList.add(x);
		
	}
	
	public void draw(Graphics window){
	
		for(Alien x : aliensList){
			x.draw(window);
		}
	}
	public void move(int alienTimer){
		/* for(Alien x : aliensList){
			 if(Math.random() < 0.25){
				 x.move("RIGHT");
			 } else if(Math.random() < 0.5){
				 x.move("LEFT");
			 } else if(Math.random() < )
		 }*/
	}
	
	public void slow(){
		for(Alien x : aliensList){
			x.setSpeed(0);
		}
	}
	public void speedUp(){
		for(Alien x : aliensList){
			x.setSpeed(1);
		}
	}
	
	
	public void checkCollision(ArrayList<Ammo> shots, ArrayList<Powerup> powerups) {
		for(Ammo x : shots){
			for(Alien y : aliensList){
				try{
					if(Math.abs(x.getX() - (y.getX() + 25)) < 50 && Math.abs(x.getY() - (y.getY() + 25)) < 50){	
						int xC  = y.getX();
						int yC = y.getY();
						aliensList.remove(y);
						shots.remove(x);
						if (Math.random() < 0.3){
							Powerup z = new Powerup(xC, yC);
							powerups.add(z);
						}
					}
				}
				catch(Exception e){
					
				}
			}
		}
	}
	
}
