

import java.awt.Graphics;
import java.util.ArrayList;
import java.util.Collections;
import java.util.ConcurrentModificationException;
import java.util.List;

public class Aliens {

	private List<Alien> aliensList;
	private double sz = 1.5;
	private int hp = 2;
	
	public Aliens(int size, int xPos, int yPos){
		aliensList = new ArrayList<Alien>();
		int sizeCounter = 0;
		int counter = 0;
		for(int i = 0; i < size; i++){
			aliensList.add(new Alien(xPos,yPos,1,hp,sz));
			xPos = xPos + 100;
			counter++;
			sizeCounter++;
			if(counter == 4){
				xPos = 100;
				yPos = yPos + 100;
				counter = 0;
			}
			if(sizeCounter == 4){
				sz = sz + 0.5;
				hp = hp + 1;
			}
			Collections.reverse(aliensList);
			
		}
		
	}
	
	public void add(Alien x){
		aliensList.add(x);
		
	}
	
	public void draw(Graphics window){
		for(Alien x : aliensList){
			x.draw(window);
		}
	}
	public void move(int alienTimer){
		 for(Alien x : aliensList){
			if(alienTimer < 200){
				x.move("RIGHT");
			} else if(alienTimer < 400){
				x.move("DOWN");
			} else if(alienTimer < 600){
				x.move("LEFT");
			} else if(alienTimer < 800){
				x.move("DOWN");
			}
		 }
	}
	
	public void slow(){
		for(Alien x : aliensList){
			x.setSpeed(0);
		}
	}
	public void speedUp(){
		for(Alien x : aliensList){
			x.setSpeed(1);
		}
	}
	
	
	public void checkCollision(ArrayList<Ammo> shots, ArrayList<Powerup> powerups) {
		for(Ammo x : shots){
			for(Alien y : aliensList){
				try{
					if(Math.abs(x.getX() - (y.getX() + 25)) < 50 && Math.abs(x.getY() - (y.getY() + 25)) < 50){	
						int xC  = y.getX();
						int yC = y.getY();
						y.loseHp();
						if(y.getHp() == 0){
							aliensList.remove(y);
							double num = Math.random();
							System.out.println(num);
							if (num < 0.2){
								
								Powerup z = new Powerup(xC, yC);
								powerups.add(z);
							}
						}
						shots.remove(x);
						
					}
				}
				
				catch(Exception e){
					
				}
				
			}
		}
	}
	
}
